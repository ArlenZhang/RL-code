    Q表存储数据很传统，但是对实际问题的复杂面前，Q表不能解决问题，产生 DQN-Deep Q Network.
                    Deep Neural Network + QLearning
编程重点：
    1. 建立记忆库
    2. 设计神经网络进行Q值计算(tensorflow)
    3. 暂时冻结Q_target参数（切断相关性）


"""
            For example in this batch I have 2 samples and 3 actions:
            q_eval =
            [[1, 2, 3],
             [4, 5, 6]]

            q_target = q_eval =
            [[1, 2, 3],
             [4, 5, 6]]

            Then change q_target with the real q_target value w.r.t the q_eval's action.
            For example in:
                sample 0, I took action 0, and the max q_target value is -1;
                sample 1, I took action 2, and the max q_target value is -2:
            q_target =
            [[-1, 2, 3],
             [4, 5, -2]]

            So the (q_target - q_eval) becomes:
            [[(-1)-(1), 0, 0],
             [0, 0, (-2)-(6)]]

            We then backpropagate this error w.r.t the corresponding action to network,
            leave other action as error=0 cause we didn't choose it.
"""